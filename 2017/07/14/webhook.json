{
    "attributes": {
        "title": "webhook",
        "date": "2017-07-14T02:52:20.000Z",
        "tags": "linux"
    },
    "body": "<p>blog现在是用hexo，放在自己的<a href=\"https://code.mkacg.com\">code</a>网站上。\ncode是用无闻大大的gogs搭建的，跑在台式机的docker中，本机跑了很多docker服务，有hexo，有aria2c，有gogs，还有个webserver caddy。\ncaddy这东西还是基友 <a href=\"https://mioto.me/\">不爱写博客的mioto</a>推荐给我的，之前我一直是用nginx的，那配置文件太复杂了，根本玩不来。\n写一篇文章，会先提交到code，然后触发webhook，caddy会拉取code中的文章，由于是静态的，所以不需要处理其他的，只需要拉取最新的就可以了。\ncaddy的配置</p>\n<pre><code>blog.mkacg.com {\n    gzip\n    redir 301 {\n    if {&gt;X-Forwarded-Proto} is http\n        /  https://{host}{uri}\n    }\n    tls kirigaya@mkacg.com\n    root /srv/www/blog\n    git code.mkacg.com/kirigayakazushin/blog {\n        path /srv/www/blog\n        branch gh-pages\n        hook /_webhook xxx\n        hook_type gogs\n        then git pull\n    }\n}\n</code></pre>\n<p>gogs上只需要创建一个webhook，地址填写成caddy中的hook地址，加密填写hook后的xxx即可，加密自己设置。\n然后就可以提交了。\n提交会触发push操作，gogs会根据设置的webhook中的规则，执行和push相关的webhook，webhook会向指定的url发送POST操作，发送的内容中包含了相关信息，caddy会根据相关信息，来处理webhook，执行你规定的操作。</p>\n",
    "id": "95424174b467660d9d29374c13638004",
    "link": "/2017/07/14/webhook"
}