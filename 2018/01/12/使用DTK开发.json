{"attributes":{"title":"使用DTK开发","date":"2018-01-12T11:05:26.000Z","tags":"Linux DTK"},"body":"**在阅读本篇文章之前，你需要掌握基本的Qt/C++开发知识。**\r\n> **注意：本篇文章基于Deepin平台，其他平台请自行补充依赖关系。**\r\n先安装DTK的依赖关系。\r\n```\r\nsudo apt install libdtkwidget2 libdtkcore2\r\n```\r\n新建Qt项目，编辑pro文件，添加项目依赖。\r\n```\r\nCONFIG += c++14 link_pkgconfig\r\nPKGCONFIG += dtkwidget\r\n```\r\nDTK目前有两个组件，一个是提供库功能的core，一个是提供控件的widget。\r\n修改main.cpp,删除QApplication的相关内容，改为DApplication。\r\n> 注意： 使用DTK的组件，需要使用DTK的宏,根据使用的文件来选择对应的宏。\r\n```\r\nDWIDGET_USE_NAMESPACE\r\nDCORE_USE_NAMESPACE\r\n```\r\nDTK使用了deepin自己的qt插件，需要在DApplication前调用。\r\n```\r\n    DApplication::loadDXcbPlugin();\r\n    DApplication app(argc, argv);\r\n```\r\nDApplication中提供了很多方法来设置程序的各种信息，具体请看头文件的定义。\r\n主窗口由DMainWindow提供，新建类，然后添加DMainWindow的头文件和DTKWIDGET的宏。\r\n```\r\n#include <DMainWindow>\r\nDWIDGET_USE_NAMESPACE\r\n```\r\n然后修改继承关系，改为继承DMainWindow。DMainWindow提供了一些我们封装的方法。目前为止，该程序的界面已经符合Deepin程序的风格了，我们封装了一些其他控件，使其样式符合我们的风格，如果要在其他Qt程序中使用，也是同样的步骤，载入Qt插件，添加对应的头文件和DTK的宏。\r\n\r\n","id":"02cc5d121a7d631cc7c19bb87da53884"}