{
    "attributes": {
        "title": "使用webpack打包Vue和TypeScript",
        "date": "2019-10-22T15:20:08.000Z",
        "tags": [
            "Vue",
            "Webpack",
            "TypeScript"
        ],
        "categories": "Web"
    },
    "body": "<p>本文将会介绍如何通过Webpack将基于TypeScript的Vue项目进行打包。</p>\n<h2>webpack基础配置</h2>\n<p>首先创建一个基本的webpack.config.js文件:</p>\n<pre><code>const path = require( 'path' );\nmodule.exports = {\n    entry: {\n        index: &quot;./src/index.ts&quot;,\n    },\n    output: {\n        path: path.resolve( __dirname, 'dist' ),\n        publicPath: '/dist/',\n        filename: '[name].js'\n    },\n    devtool: 'inline-source-map',\n    mode: 'development',\n    module: {\n        rules: [\n        ]\n    },\n    resolve: {\n    }\n};\n</code></pre>\n<p>此时webpack只能将src/index.ts文件直接输出为index.js，我们需要添加typescript的loader，进行typescript的转换。\n将以下代码加入rules节:</p>\n<pre><code>{\n    test: /\\.ts?$/,\n    loader: 'ts-loader',\n    exclude: /node_modules/,\n},\n</code></pre>\n<p>通过ts-loader进行ts文件的转换，我们还需要创建typescript的一个配置文件。</p>\n<h2>添加typescript支持</h2>\n<p>创建tsconfig.json</p>\n<pre><code>{\n    &quot;compilerOptions&quot;: {\n        &quot;outDir&quot;: &quot;./dist/&quot;,\n        &quot;sourceMap&quot;: true,\n        &quot;strict&quot;: true,\n        &quot;module&quot;: &quot;commonjs&quot;,\n        &quot;moduleResolution&quot;: &quot;node&quot;,\n        &quot;target&quot;: &quot;es5&quot;,\n        &quot;skipLibCheck&quot;: true,\n        &quot;esModuleInterop&quot;: true,\n        &quot;experimentalDecorators&quot;: true\n    },\n    &quot;include&quot;: [\n        &quot;./src/**/*&quot;\n    ]\n}\n</code></pre>\n<p>还需要在webpack的配置中添加ts文件，在resolve节中添加:</p>\n<pre><code>extensions: [ '.ts', '.js' ],\n</code></pre>\n<p>我们指定ts转换出的js代码是es5的。\n这个时候我们运行webpack，将会看到正常的转换输出。</p>\n<pre><code>Hash: c3a0ae2c47032de12eec\nVersion: webpack 4.41.0\nTime: 1880ms\nBuilt at: 10/22/2019 3:40:59 PM\n   Asset      Size  Chunks             Chunk Names\nindex.js  11.8 KiB   index  [emitted]  index\nEntrypoint index = index.js\n[./src/index.ts] 269 bytes {index} [built]\n</code></pre>\n<p>入口文件就是index.ts了，之后我们就正常的在index.ts中写我们的代码，webpack就会查找所有的依赖，并打包输出到index.js中。</p>\n<h2>添加Vue单文件的支持</h2>\n<p>Vue单文件组件(SFC)规范是指在一个文件中，提供html、css和script代码，三者包含在顶级语言块 <code>&lt;template&gt;</code>、<code>&lt;script&gt;</code> 和 <code>&lt;style&gt;</code>\n中，还允许添加可选的自定义块。\n这是一个简单的vue单文件例子:</p>\n<pre><code>&lt;template&gt;\n  &lt;div class=&quot;example&quot;&gt;{{ msg }}&lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nexport default {\n  data () {\n    return {\n      msg: 'Hello world!'\n    }\n  }\n}\n&lt;/script&gt;\n&lt;style&gt;\n.example {\n  color: red;\n}\n&lt;/style&gt;\n&lt;custom1&gt;\n  This could be e.g. documentation for the component.\n&lt;/custom1&gt;\n</code></pre>\n<p>我们通过vue-loader来解析该文件，提取每一个语言块，如有需要，会传递给其他loader进行处理，最后组装为一个ES Module。\n我们在webpack的rules节中添加vue-loader:</p>\n<pre><code>{\n  test: /\\.vue$/,\n  loader: 'vue-loader',\n  options: {\n    loaders: {\n      // Since sass-loader (weirdly) has SCSS as its default parse mode, we map\n      // the &quot;scss&quot; and &quot;sass&quot; values for the lang attribute to the right configs here.\n      // other preprocessors should work out of the box, no loader config like this necessary.\n      'scss': 'vue-style-loader!css-loader!sass-loader',\n      'sass': 'vue-style-loader!css-loader!sass-loader?indentedSyntax',\n    }\n    // other vue-loader options go here\n  }\n},\n</code></pre>\n<h2>如果vue是typescript代码？</h2>\n<p>其实这很简单，ts-loader有一个appendTsSuffixTo的功能，可以给某个文件增加.ts的后缀，从而识别这个文件为ts文件。</p>\n<pre><code>{\n  test: /\\.tsx?$/,\n  loader: 'ts-loader',\n  exclude: /node_modules/,\n  options: {\n    appendTsSuffixTo: [/\\.vue$/],\n  }\n},\n</code></pre>\n<p>我们还需要在项目中添加一个vue-shim.d.ts来让ts正确的识别vue。</p>\n<pre><code>declare module '*.vue' {\n  import Vue from 'vue'\n  export default Vue\n}\n</code></pre>\n<p>还需要在webpack的resolve节追加vue的后缀:</p>\n<pre><code>resolve: {\n  extensions: [ '.tsx', '.ts', '.js' , '.vue'],\n  alias: {\n    'vue': 'vue/dist/vue.js'\n  }\n},\n</code></pre>\n<p>vue-loader现在需要手动处理一下插件，在webpack.config.js的头部导入vue-loader，并在plugins节创建对象。</p>\n<pre><code>const { VueLoaderPlugin } = require('vue-loader')\n.......\nplugins: [\n  new VueLoaderPlugin()\n],\n</code></pre>\n<p>否则将不能正确工作。\n此时已经完成了webpack+vue+typescript的全部工作。</p>\n<pre><code>Hash: 320d4ed3f55f52872694\nVersion: webpack 4.41.0\nTime: 2494ms\nBuilt at: 10/22/2019 4:00:50 PM\n      Asset       Size    Chunks             Chunk Names\n  bundle.js   1.12 MiB    bundle  [emitted]  bundle\nelectron.js   12.2 KiB  electron  [emitted]  electron\n index.html  194 bytes            [emitted]\nEntrypoint bundle = bundle.js\nEntrypoint electron = electron.js\n[./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js?!./src/app.vue?vue&amp;type=style&amp;index=0&amp;id=5ef48958&amp;rel=stylesheet%2Fscss&amp;lang=scss&amp;scoped=true&amp;] ./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib??vue-loader-options!./src/app.vue?vue&amp;type=style&amp;index=0&amp;id=5ef48958&amp;rel=stylesheet%2Fscss&amp;lang=scss&amp;scoped=true&amp; 542 bytes {bundle} [built]\n[./node_modules/ts-loader/index.js?!./node_modules/vue-loader/lib/index.js?!./src/Components/About.vue?vue&amp;type=script&amp;lang=ts&amp;] ./node_modules/ts-loader??ref--1!./node_modules/vue-loader/lib??vue-loader-options!./src/Components/About.vue?vue&amp;type=script&amp;lang=ts&amp; 305 bytes {bundle} [built]\n[./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./src/Components/About.vue?vue&amp;type=template&amp;id=aa9c95a6&amp;] ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/Components/About.vue?vue&amp;type=template&amp;id=aa9c95a6&amp; 235 bytes {bundle} [built]\n[./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./src/app.vue?vue&amp;type=template&amp;id=5ef48958&amp;scoped=true&amp;] ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/app.vue?vue&amp;type=template&amp;id=5ef48958&amp;scoped=true&amp; 589 bytes {bundle} [built]\n[./node_modules/vue-style-loader/index.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib/index.js?!./src/app.vue?vue&amp;type=style&amp;index=0&amp;id=5ef48958&amp;rel=stylesheet%2Fscss&amp;lang=scss&amp;scoped=true&amp;] ./node_modules/vue-style-loader!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/sass-loader/dist/cjs.js!./node_modules/vue-loader/lib??vue-loader-options!./src/app.vue?vue&amp;type=style&amp;index=0&amp;id=5ef48958&amp;rel=stylesheet%2Fscss&amp;lang=scss&amp;scoped=true&amp; 1.64 KiB {bundle} [built]\n[./src/Components/About.vue] 1.06 KiB {bundle} [built]\n[./src/Components/About.vue?vue&amp;type=script&amp;lang=ts&amp;] 350 bytes {bundle} [built]\n[./src/Components/About.vue?vue&amp;type=template&amp;id=aa9c95a6&amp;] 203 bytes {bundle} [built]\n[./src/app.vue] 1.08 KiB {bundle} [built]\n[./src/app.vue?vue&amp;type=style&amp;index=0&amp;id=5ef48958&amp;rel=stylesheet%2Fscss&amp;lang=scss&amp;scoped=true&amp;] 716 bytes {bundle} [built]\n[./src/app.vue?vue&amp;type=template&amp;id=5ef48958&amp;scoped=true&amp;] 207 bytes {bundle} [built]\n[./src/entry.ts] 538 bytes {bundle} [built]\n[./src/main.ts] 1.11 KiB {electron} [built]\n[./src/route.ts] 1.35 KiB {bundle} [built]\n</code></pre>\n",
    "id": "eb5e31eba4260e2683ba9964334c8cba",
    "link": "/2019/10/22/使用webpack打包Vue和TypeScript"
}